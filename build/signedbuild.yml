name: $(date:yyyy-MM-dd)$(rev:.rr)
trigger: none
pr: none
variables:
  BuildPlatform: 'x86'
  MAICreateNuget: 'true'
  PublicRelease: 'true'
  SignAppForRelease: 'false'
  TeamName: 'Accessibility Insights Windows'
  system.debug: 'true' #set to true in case our signed build flakes out again
  runCodesignValidationInjection: 'false'

jobs:
- job: SignedRelease
  pool: VSEng-MicroBuildVS2019
  variables:
    SignAppForRelease: 'true'

  steps:
  - task: ms-vseng.MicroBuildTasks.a0262b21-fb8f-46f8-bb9a-60ed560d4a87.MicroBuildLocalizationPlugin@1
    displayName: 'Install Localization Plugin'

  - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@2
    displayName: 'Install Signing Plugin'
    inputs:
      signType: real

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet 5.x'
    inputs:
      versionSpec: '5.x'

  - task: NuGetCommand@2
    displayName: 'NuGet restore'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: restore
      projects: |
        **\*.csproj
        !**\CustomActions.csproj

  - task: VSBuild@1
    displayName: 'Build Solution **\AccessibilityInsights.sln'
    inputs:
      vsVersion: 16.0
      platform: '$(BuildPlatform)'
      configuration: SignedRelease
      solution: '**/AccessibilityInsights.sln'  # we only want to build AccessibilityInsights for signing

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      Contents: '**\bin\release\**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'

  - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
    displayName: 'Perform Cleanup Tasks'
    condition: succeededOrFailed()
