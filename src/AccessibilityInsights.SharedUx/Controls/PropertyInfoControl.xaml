<!-- Copyright (c) Microsoft. All rights reserved.
     Licensed under the MIT license. See LICENSE file in the project root for full license information.-->
<UserControl x:Class="AccessibilityInsights.SharedUx.Controls.PropertyInfoControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AccessibilityInsights.SharedUx.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:AccessibilityInsights.SharedUx.Behaviors"
             xmlns:fabric="clr-namespace:AccessibilityInsights.DesktopUI.Controls;assembly=AccessibilityInsights.DesktopUI"
             xmlns:Properties="clr-namespace:AccessibilityInsights.SharedUx.Properties"
             xmlns:customcontrols="clr-namespace:AccessibilityInsights.SharedUx.Controls.CustomControls"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="310"
             AutomationProperties.Name="{x:Static Properties:Resources.PropertyInfoControlAutomationPropertiesName}" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <ResourceDictionary Source="..\Resources\Styles.xaml"/>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" >
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Path=Width, 
           RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement},Mode=OneWayToSource}"/>
                </Grid.ColumnDefinitions>
                <Border Background="#14000000" x:Name="dpFilter" Grid.Row="0" HorizontalAlignment="Stretch" BorderBrush="LightGray" BorderThickness="0" Height="24" Margin="0,0,0,5">
                    <DockPanel>
                        <fabric:FabricIconControl GlyphName="Search" GlyphSize="Custom" FontSize="18" Margin="5,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#333333"/>
                        <Grid>
                            <TextBlock IsHitTestVisible="False" Name="tbSearch" Text="{x:Static Properties:Resources.tbSearchText}" VerticalAlignment="Center" Style="{StaticResource VarStandardTextBlock}"/>
                            <TextBox x:Name="textboxSearch" TextChanged="textboxSearch_TextChanged"
                                    AutomationProperties.Name="{x:Static Properties:Resources.tbSearchText}" 
                                    AutomationProperties.HelpText="{x:Static Properties:Resources.PropertyInfoControl_textboxSearch}"
                                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                    Height="24"
                                    Style="{StaticResource StandardTextBox}"
                                    HorizontalAlignment="Stretch"
                                    VerticalContentAlignment="Center"
                                    BorderThickness="0"
                                    Background="Transparent" GotKeyboardFocus="textboxSearch_GotKeyboardFocus" LostKeyboardFocus="textboxSearch_LostKeyboardFocus"/>
                        </Grid>
                    </DockPanel>
                </Border>
                <customcontrols:CustomDataGrid
                    x:Name="dgProperties"
                    Grid.Row="2"
                    AutomationProperties.Name="{x:Static Properties:Resources.dgPropertiesAutomationPropertiesName}" 
                    KeyUp="dgProperties_KeyUp"
                    IsTabStop="False"
                    GotKeyboardFocus="onGotKeyBoardFocus"
                    Style="{StaticResource dgStyle}" CellStyle="{StaticResource dgcStyle}" RowStyle="{StaticResource dgrStyle}" ColumnHeaderStyle="{StaticResource dgchStyle}">
                    <i:Interaction.Behaviors>
                        <behaviors:ColumnResizeHotkeyBehavior/>
                    </i:Interaction.Behaviors>
                    <DataGrid.ContextMenu>
                        <ContextMenu FlowDirection="LeftToRight" Style="{StaticResource menuPlainWhite}">
                            <MenuItem x:Name="copyMenuItemProperty" Tag="{x:Static Properties:Resources.copyMenuItemPropertyTag}" IsCheckable="False" Header="{x:Static Properties:Resources.copyMenuItemPropertyHeader}" Command="Copy" Style="{StaticResource miFabIcon}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=Name}" ElementStyle="{StaticResource DataGridTextCellStyle}" Header="{x:Static Properties:Resources.DataGridTextColumnHeaderName}" Width="Auto"/>
                        <DataGridTextColumn Binding="{Binding Path=Value, TargetNullValue='{x:Static Properties:Resources.PropertyDoesNotExist}'}" 
                                            ElementStyle="{StaticResource DataGridTextCellStyle}" Header="Value" Width="Auto">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource dgcStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Value}" Value="{x:Null}">
                                            <Setter Property="FontStyle" Value="Italic" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.ItemContainerStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Focusable" Value="True"/>
                        </Style>
                    </DataGrid.ItemContainerStyle>
                </customcontrols:CustomDataGrid>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>

